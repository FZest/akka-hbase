akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

  actor {
    provider = "akka.remote.RemoteActorRefProvider"

    default-mailbox = {
      mailbox-type = "io.github.junheng.akka.monitor.mailbox.MonitoredSafeMailbox"
      mailbox-capacity = 100000
    }

    default-dispatcher = {
      type = Dispatcher
      executor = "io.github.junheng.akka.monitor.dispatcher.MonitoredForkJoinExecutorServiceConfigurator"
      monitored-fork-join-executor {
        parallelism-min = 512
        parallelism-factor = 8
        parallelism-max = 512
        monitor-interval = 60000
      }
    }

    kryo  {
      idstrategy = "default"
      implicit-registration-logging = true

    }

    serializers {
      java = "com.romix.akka.serialization.kryo.KryoSerializer"
      hbase = "io.github.junheng.akka.hbase.protocol.ProtocolSerializer"
    }

    serialization-bindings {
      "io.github.junheng.akka.hbase.protocol.HBaseComplicateMessage": hbase
    }
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    log-buffer-size-exceeding = 10000
    netty.tcp {
      hostname = ${host}
      port = 0
      maximum-frame-size = 16m
    }
  }
}

safe-mailbox-monitor {
  report-interval = 120 seconds
  watched-actor-paths = []
}

accessor {
  host = ${host}
  port = 8000
}

hbase {
  zookeepers = "phb01,phb02,phb03"
  zookeepers-port = 2181

  tables = [
    {name: "post_meta", cf: "0x41", split: "uniform", regions: 128}
    {name: "post_comment_meta", cf: "0x41", split: "uniform", regions: 128}
    {name: "image", cf: "0x41", split: "uniform", regions: 128}
    {name: "image_grouped", cf: "0x41", split: "uniform", regions: 128}
    {name: "profile", cf: "0x41", split: "uniform", regions: 128}
    {name: "profile_friend", cf: "0x41", split: "uniform", regions: 128}
    {name: "post_summary_timely", cf: "0x41", split: "uniform", regions: 128}
  ]
}

